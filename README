
Ready queues are FCFS, if there is HIGH priority process in the system it can hog the CPU(will not let any normal or low priority into the system).

Semaphore implementation can be found at https://en.wikipedia.org/wiki/Semaphore_(programming). Dijkstra
At sem value = 0 ,P blocks (decrements on all occasions)
At sem value < 0, V unblocks (increments on all occasions)

Any input followed by gibberish will be count as valid input. "Y123asdcw3" will call Reply for example.

A sender can send multiple messages to some process and they wont get lost or overwritten(maximum of list nodes).

If a process calls Receive but there are non it blocks if there is some messages it will print and carry on. 
If a process Receives a message while blocked, it will unblock and wait for its turn to run before printing the message
Sender prints its replies also while running(must wait for its turn).

Init to print any message, it needs to call R even if it is running.

